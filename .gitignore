# Ignore Visual Studio temporary files, build results, and
# folders generated by popular Visual Studio add-ons.

appsettings.*.json
appsettings.json

# User-specific files
*.rsuser
*.suo
*.user
*.userosscache
*.sln.docstates
*.userprefs

# User-specific files (Mono Auto Generated)
mono_crash.*

# User-specific files (VSCode)
.vscode/
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
.vscode/*.{code-workspace,code-workspace.json}

# User-specific files (Rider)
.idea/
.idea/*

# Mono Auto Generated Files
mono_crash.*

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]in/
[Oo]bj/
build/
Bin/
Obj/

# Legacy StyleCop files
StyleCopCache.*

# Temporary files
*.tmp
*.temp
*.log
*.vspscc
*.vssscc
*.dat
*.obj
*.dll
*.pdb
*.exe
*.app
*.ipa
*.provisionprofile
*.so
*.dylib
*.lib
*.nupkg
*.snupkg
*.swp
*.lock.json

# Windows image file caches
Thumbs.db
ehthumbs.db

# Folder config file
Desktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# VS Code directories
.history/

# npm package directories
node_modules/
Client/node_modules/

# ASP.NET Scaffolding
ScaffoldingReadMe.txt

# Others
.vs/
.temp/

# React/Node.js directories and files
Client/build/
Client/dist/
Client/.env.local
Client/.env.development.local
Client/.env.test.local
Client/.env.production.local
Client/npm-debug.log*
Client/yarn-debug.log*
Client/yarn-error.log*

# Dependency directories
Client/.pnp
Client/.pnp.js

# Next.js directories
Client/.next/
Client/out/

# Nuxt.js directories
Client/.nuxt/
Client/dist/

# Gatsby files
Client/.cache/
Client/public/

# Serverless directories
Client/.serverless/

# FuseBox directories
Client/.fusebox/

# GraphQL files
Client/.cache/
Client/public/

# Sapper directories
Client/__sapper__/

# Gridsome files
Client/.cache/
Client/dist/

# Cache and compiled files
Client/.cache/
Client/.next/
Client/out/

# Log files
Client/logs
Client*.log
Client*.logs

# Runtime data
Client/pids
Client*.pid
Client*.seed
Client*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
Client/lib-cov

# Coverage directory used by tools like istanbul
Client/coverage
Client/*.lcov

# nyc test coverage
Client/.nyc_output

# Jest coverage directory
Client/coverage

# Bower dependency directory
Client/bower_components

# Compiled code
Client/dist/
Client/tmp/
Client/temp/

# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
Client/.grunt

# Compiled Dlls and other files
Client/bin
Client/obj
Client/logs
Client/*.log
Client*.temp

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Python
__pycache__/
*.py[cod]
*$py.class
venv/

# Visual Studio 2015 cache/options directory
.vs/
/wwwroot/dist/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUNIT
*.VisualState.xml
TestResult.xml

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

*_i.c
*_p.c
*_i.h
*.ilk
*.meta
*.pch
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*.log
*.svclog
*.scc

# Chutzpah Test files
_Chutzpah*

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opendb
*.opensdf
*.sdf
*.cachefile

# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap

# TFS 2012 Local Workspace
$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# JustCode is a .NET coding add-in
.JustCode

# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# NCrunch
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# TODO: Comment the next line if you want to checkin your web deploy settings
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# NuGet Packages
*.nupkg
# The packages folder can be ignored because of Package Restore
**/packages/*
# except build/, which is used as an MSBuild target.
!**/packages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/packages/repositories.config

# Microsoft Azure Build Output
csx/
*.build.csdef

# Microsoft Azure Emulator
ecf/
rcf/

# Microsoft Azure ApplicationInsights config file
ApplicationInsights.config

# Windows Store app package directory
AppPackages/
BundleArtifacts/

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!*.[Cc]ache/

# Others
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.pfx
*.publishsettings
orleans.codegen.cs

# RIA/Silverlight projects
Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm

# SQL Server files
*.mdf
*.ldf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings

# Microsoft Fakes
FakesAssemblies/

# GhostDoc plugin setting file
*.GhostDoc.xml

# Node.js Tools for Visual Studio
.ntvs_analysis.dat

# Visual Studio 6 build log
*.plg

# Visual Studio 6 workspace options file
*.opt

# Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions

# Paket dependency manager
.paket/paket.exe

# FAKE - F# Make
.fake/
